{"ast":null,"code":"var _jsxFileName = \"/Users/yanchangcheng/earnMoney/country/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.get(`http://localhost:3000/api/country?name=${query}`);\n      console.log(response.data.data);\n      if (!response || !response.data.data || !Array.isArray(response.data.data)) {\n        console.error(\"Invalid response from server\");\n        return;\n      }\n      setCountries(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"query\",\n        children: \"Enter country name or code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"query\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: country.flags.png,\n        alt: `Flag of ${country.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Population: \", country.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Region: \", country.region]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)]\n    }, country.name.common, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"j8OILz40Cwe4oROB1zELQJfkKbQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","query","setQuery","countries","setCountries","handleSubmit","e","preventDefault","response","get","console","log","data","Array","isArray","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","map","country","name","common","src","flags","png","alt","capital","population","region","_c","$RefreshReg$"],"sources":["/Users/yanchangcheng/earnMoney/country/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.get(`http://localhost:3000/api/country?name=${query}`);\n      console.log(response.data.data)\n      if (!response || !response.data.data || !Array.isArray(response.data.data)) {\n        console.error(\"Invalid response from server\");\n        return;\n      }\n      setCountries(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n      <div>\n        <h1>Country Info</h1>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"query\">Enter country name or code:</label>\n          <input\n              type=\"text\"\n              id=\"query\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        {countries.map((country) => (\n            <div key={country.name.common}>\n              <h2>{country.name.common}</h2>\n              <img src={country.flags.png} alt={`Flag of ${country.name.common}`} />\n              <p>Capital: {country.capital}</p>\n              <p>Population: {country.population}</p>\n              <p>Region: {country.region}</p>\n            </div>\n        ))}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}